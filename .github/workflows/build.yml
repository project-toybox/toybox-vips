name: Build

on:
  workflow_call:
  workflow_dispatch:

jobs:
  prepare:
    name: Prepare to build
    runs-on: ubuntu-latest
    steps:
      # Note: it returns 'release(=version tag)' and 'id(=version ID)'.
      - id: get-release-info
        name: Get release information
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          owner: libvips
          repo: libvips
          excludes: prerelease, draft

      # Note: it returns 'exists(true or false)'.
      - id: check-duplicates
        name: Check duplicates
        uses: mukunku/tag-exists-action@v1.1.0
        with:
          tag: ${{steps.get-release-info.outputs.release}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      tag: ${{steps.get-release-info.outputs.release}}
      is-duplicated: ${{steps.check-duplicates.exists}}
  
  build:
    needs: prepare
    name: Build libvips
    runs-on: ubuntu-latest
    env:
      BUILD_CACHE_KEY: libvips-build-cache
      TEMP_CACHE_KEY: libvips-temp-cache
    steps:    
      - id: checkout
        name: Checkout
        uses: actions/checkout@v3
        with:
          repository: 'libvips/build-win64-mxe'
          
      - id: prepare-envs
        name: Prepare environment variables
        run: export DEFAULT_WD=$(pwd) && echo $DEFAULT_WD
      
      - id: prepare-volumns
        name: Prepare docker volumns
        run: pwd && mkdir temp && sudo chmod 777 temp && sudo chown runner:runner temp && sudo chmod 777 build && sudo chown runner:runner build && ls -R
        
      - id: check-build-cache
        name: Check build cache
        uses: actions/cache@v3
        with:
          path: ./build
          key: ${{env.BUILD_CACHE_KEY}}

      - id: check-temp-cache
        name: Check temp cache
        uses: actions/cache@v3
        with:
          path: ./temp
          key: ${{env.TEMP_CACHE_KEY}}
          
      - id: check-build-cache-hit
        name: Check build cache-hit
        if: steps.check-build-cache.outputs.cache-hit == 'true'
        run: echo HIT!
        
      - id: check-temp-cache-hit
        name: Check temp cache-hit
        if: steps.check-temp-cache.outputs.cache-hit == 'true'
        run: echo HIT!
        
      - id: build-amd64
        name: Build for AMD64
        run: ./build.sh --ref ${{needs.prepare.outputs.tag}} --tmpdir ./temp --with-hevc all x86_64 shared && ls -R
      
      - id: build-aarch64
        name: Build for AArch64(ARM64)
        run: ./build.sh --ref ${{needs.prepare.outputs.tag}} --tmpdir ./temp --with-hevc all aarch64 shared && ls -R
        
      - id: change-work-directory
        name: Change work directory
        run: cd $DEFAULT_WD
        
      - id: upload-artifacts
        name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: libvips-${{needs.prepare.outputs.tag}}-artifacts
          path: ./*

  release:
    needs: build
    name: Release to GitHub
    runs-on: ubuntu-latest
    steps:
      - id: download-artifacts
        name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: libvips-${{needs.prepare.outputs.tag}}-artifacts
          
      - id: display-file-structure
        name: Display file structure
        run: ls -R
        
      - id: delete-existing-release
        name: Delete the existing release
        if: needs.prepare.outputs.is-duplicated == 'true'
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        with:
          delete_release: true
          tag_name: ${{needs.prepare.outputs.tag}}
          repo: project-toybox/toybox-vips
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        
      - id: create-release
        name: Create a release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{secrets.GITHUB_TOKEN}}
          automatic_release_tag: ${{needs.prepare.outputs.tag}}
          prerelease: false
          title: ${{needs.prepare.outputs.tag}}
      
