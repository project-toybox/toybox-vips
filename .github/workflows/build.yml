name: Build

on:
  workflow_call:
  workflow_dispatch:

jobs:
  prepare:
    name: Prepare to build
    runs-on: ubuntu-latest
    steps:
      # Note: it returns 'release(=version tag)' and 'id(=version ID)'.
      - id: get-release-info
        name: Get release information
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          owner: libvips
          repo: build-win64-mxe
          excludes: prerelease, draft

      # Note: it returns 'exists(true or false)'.
      - id: check-duplicates
        name: Check duplicates
        uses: mukunku/tag-exists-action@v1.1.0
        with:
          tag: ${{steps.get-release-info.outputs.release}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      tag: ${{steps.get-release-info.outputs.release}}
      id: ${{steps.get-release-info.outputs.id}}
      is-duplicated: ${{steps.check-duplicates.exists}}
  
  build-x86-family:
    needs: prepare
    name: Build for x86 family
    runs-on: ubuntu-latest
    steps:    
      - id: checkout
        name: Checkout
        uses: actions/checkout@v3
        with:
          repository: 'libvips/build-win64-mxe'

      - id: create-temp-dir
        name: Create a temp directory
        run: pwd && mkdir temp && ls -al
        
      - id: check-build-cache
        name: Check build cache
        uses: actions/cache@v3
        with:
          path: ./build
          key: libvips-build-cache-x86-${{needs.prepare.outputs.tag}}
          restore-keys: |
            libvips-build-cache-x86
            libvips-build-cache

      - id: check-temp-cache
        name: Check temp cache
        uses: actions/cache@v3
        with:
          path: ./temp
          key: libvips-temp-cache-x86-${{needs.prepare.outputs.tag}}
          restore-keys: |
            libvips-temp-cache-x86
            libvips-temp-cache
          
      - id: check-build-cache-hit
        name: Check build cache-hit
        if: steps.check-build-cache.outputs.cache-hit == 'true'
        run: echo HIT!
        
      - id: check-temp-cache-hit
        name: Check temp cache-hit
        if: steps.check-temp-cache.outputs.cache-hit == 'true'
        run: echo HIT!

      - id: change-permissions
        name: Change permissions
        run: pwd && sudo chmod -R 777 /home/runner/work/toybox-vips/toybox-vips && sudo chown -R runner:runner /home/runner/work/toybox-vips/toybox-vips && ls -al
      
      - id: build-i686
        name: Build for i686(x86-32)
        run: ./build.sh --tmpdir ./temp --with-hevc all i686 shared && ls -al
      
      - id: build-amd64
        name: Build for AMD64(x86-64)
        run: ./build.sh --tmpdir ./temp --with-hevc all x86_64 shared && ls -al
        
      - id: upload-build-outputs
        name: Upload build outputs
        uses: actions/upload-artifact@v3
        with:
          name: libvips-x86-build-outputs
          path: |
            /home/runner/work/toybox-vips/toybox-vips/build/*.zip

      - id: remove-build-outputs
        name: Remove build outputs
        run: rm /home/runner/work/toybox-vips/toybox-vips/build/*.zip
        
  build-arm-family:
    needs: prepare
    name: Build for ARM family
    runs-on: ubuntu-latest
    steps:    
      - id: checkout
        name: Checkout
        uses: actions/checkout@v3
        with:
          repository: 'libvips/build-win64-mxe'

      - id: create-temp-dir
        name: Create a temp directory
        run: pwd && mkdir temp && ls -al
        
      - id: check-build-cache
        name: Check build cache
        uses: actions/cache@v3
        with:
          path: ./build
          key: libvips-build-cache-arm-${{needs.prepare.outputs.tag}}
          restore-keys: |
            libvips-build-cache-arm
            libvips-build-cache

      - id: check-temp-cache
        name: Check temp cache
        uses: actions/cache@v3
        with:
          path: ./temp
          key: libvips-temp-cache-arm-${{needs.prepare.outputs.tag}}
          restore-keys: |
            libvips-temp-cache-arm
            libvips-temp-cache
          
      - id: check-build-cache-hit
        name: Check build cache-hit
        if: steps.check-build-cache.outputs.cache-hit == 'true'
        run: echo HIT!
        
      - id: check-temp-cache-hit
        name: Check temp cache-hit
        if: steps.check-temp-cache.outputs.cache-hit == 'true'
        run: echo HIT!

      - id: change-permissions
        name: Change permissions
        run: pwd && sudo chmod -R 777 /home/runner/work/toybox-vips/toybox-vips && sudo chown -R runner:runner /home/runner/work/toybox-vips/toybox-vips && ls -al
        
      - id: build-armv7
        name: Build for ARMv7(ARM32)
        run: ./build.sh --tmpdir ./temp --with-hevc all armv7 shared && ls -al
      
      - id: build-aarch64
        name: Build for AArch64(ARM64)
        run: ./build.sh --tmpdir ./temp --with-hevc all aarch64 shared && ls -al
        
      - id: upload-build-outputs
        name: Upload build outputs
        uses: actions/upload-artifact@v3
        with:
          name: libvips-arm-build-outputs
          path: |
            /home/runner/work/toybox-vips/toybox-vips/build/*.zip

      - id: remove-build-outputs
        name: Remove build outputs
        run: rm /home/runner/work/toybox-vips/toybox-vips/build/*.zip

  release:
    needs: [prepare, build-x86-family, build-arm-family]
    name: Release to GitHub
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v2
      
      - id: delete-existing-release
        name: Delete the existing release
        if: needs.prepare.outputs.is-duplicated == true
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        with:
          delete_release: true
          tag_name: ${{needs.prepare.outputs.tag}}
          repo: project-toybox/toybox-vips
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    
      - id: download-x86-build-outputs
        name: Download x86 build outputs
        uses: actions/download-artifact@v3
        with:
          name: libvips-x86-build-outputs
          
      - id: download-arm-build-outputs
        name: Download ARM build outputs
        uses: actions/download-artifact@v3
        with:
          name: libvips-arm-build-outputs
      
      - id: create-tag
        name: Create a tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: ${{needs.prepare.outputs.tag}}
      
      - id: create-release
        name: Create a release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{needs.prepare.outputs.tag}}
          tag_name: ${{needs.prepare.outputs.tag}}
          draft: false
          prerelease: false
          files: |
            *.zip
